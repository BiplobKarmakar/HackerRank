

int[] queryArray = new int[queries.size()];
int queryArrayCount = 0;
long[] arr = new long[n+2];

for(List<Integer> queryList : queries){
        int a =  queryList.get(0);
        int b =  queryList.get(1);
        int k =  queryList.get(2);

        arr[a] = arr[a] + k;
        arr[b+1] = arr[b+1] - k;
}

for(int i = 1; i < n+2; i++){
    arr[i]  = arr[i] + arr[i-1]; 
}

    long max = arr[0];
    for (int i=0; i<arr.length; i++){
        if(arr[i] > max){
            max = arr[i];
        }
    }
        return max;
}
public static long arrayManipulation(int n, List<List<Integer>> queries) {
    long[] answer = new long[n+2];
    for(int i=0;i<answer.length;i++) answer[i] = 0l;
    for(int i=0;i<queries.size();i++){
        List<Integer> q = queries.get(i);
        answer[q.get(0)] = q.get(2) + answer[q.get(0)];
        answer[q.get(1)+1] = -q.get(2)+ answer[q.get(1)+1];
    }
    long max = 0l;
    for(int i=1;i<answer.length;i++){
        answer[i] = answer[i-1] + answer[i];
        if(max<answer[i]) max = answer[i];
    }
    return max;
}
int max=0;
int[] arr=new int[n];
for(List<Integer> l:queries){
    arr[l.get(0)-1]=arr[l.get(0)-1]+l.get(2);
    if((l.get(1))<n){
        arr[l.get(1)]=arr[l.get(1)]-l.get(2);
    }


}        
    int preSum=0;
    for(int i=0;i<n;i++){
        preSum=preSum+arr[i];
        arr[i]=preSum;
    }
      for (int i = 1; i < arr.length; i++){
          System.out.println(arr[i]);
            if (arr[i] > max)
             max = arr[i];
      }


     return max;
}
public static long arrayManipulation(int n, List<List<Integer>> queries) {
    // Write your code here
        long arr[]=new long[n];
        long max=0;
        for(List<Integer> query:queries){
            int l=query.get(0);
            int r=query.get(1);
            int k=query.get(2);
            arr[l-1]+=k;
            if(r!=n){
                arr[r]+=-k;
            }
            
        }
        for(int i=1;i<n;i++){
            //System.out.println(arr[i]);
            arr[i]=arr[i]+arr[i-1];
            if(arr[i]>max)max=arr[i];
        }
        return max;
    }